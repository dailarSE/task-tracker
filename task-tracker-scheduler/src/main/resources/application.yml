spring:
  application:
    name:
      task-tracker-scheduler
  data:
    redis:
      host: redis
      port: 6379
  kafka:
    bootstrap-servers: kafka:9092
    properties:
      request.timeout.ms: 30000
    producer:
      acks: "all"
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      retries: 3
      properties:
        spring.json.add.type.headers: false
        # Общий таймаут на доставку сообщения, включая все ретраи.
        # Должен быть больше, чем request.timeout.ms * (retries + 1)
        delivery.timeout.ms: 121000 # 2 минуты + dt
    consumer:
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      auto-offset-reset: latest
      properties:
        # Максимальное время между вызовами poll().
        max.poll.interval.ms: 300000 # 5 минут
        # Таймаут сессии для consumer group.
        session.timeout.ms: 30000
        # Частота отправки "heartbeat" для поддержания сессии.
        # Обычно ~1/3 от session.timeout.ms.
        heartbeat.interval.ms: 10000 # 10 секунд
    listener:
      missing-topics-fatal: true
    admin:
      fail-fast: true

logging:
  structured:
    format:
      console: ecs
  level:
    root: INFO

management:
  endpoints:
    web:
      exposure:
        include: health, info

otel:
  service:
    name: ${spring.application.name}
  exporter:
    otlp:
      endpoint: http://otel-collector:4318 # OTLP/HTTP
  instrumentation:
    common:
      default-enabled: true
    micrometer:
      enabled: true
    logback-appender:
      enabled: true
      experimental:
        capture-mdc-attributes: "*"
  propagators: tracecontext,baggage
  traces:
    sampler:
      arg: "0.1"

app:
  scheduler:
    # --- Backend HTTP Client ---
    backend-client:
      url: "stub"
      api-key: "stub" # ${BACKEND_API_KEY}
      connect-timeout: 5s # Дефолт
      read-timeout: 30s   # Дефолт
      retry:
        enabled: true
        max-attempts: 3
        initial-interval-ms: 2000
        multiplier: 2.0
        max-interval-ms: 10000

    scheduled-job:
      cron: "stub" # Например, "0 0 0 * * *" - каждый день в полночь.
      page-size: 1000 # Дефолт

    shedlock:
      lock-name: "task_report_producer_job" # Дефолт
      lock-at-most-for: 30m                # Дефолт
      lock-at-least-for: 1m                 # Дефолт

    kafka:
      producer:
        topic-name: "task_tracker.commands.process_user" # Например, "task_tracker.notifications.user_reports"
      consumer:
        topic-name: "task_tracker.commands.process_user" # Например, "task_tracker.commands.process_user"
        group-id: "stub" # Например, "scheduler-consumers"
        max-poll-records: 100  # Дефолт
        poll-timeout: 3000ms   # Дефолт
        concurrency: 3         # Дефолт
        retry-and-dlt:
          enabled: true
          max-attempts: 3
          initial-interval-ms: 2000
          multiplier: 2.0
          max-interval-ms: 10000
          dlt:
            enabled: true